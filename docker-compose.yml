version: '3.9'

services:
  force-clone:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./data/optimism:/app/data/optimism
      - ./data/op-geth:/app/data/op-geth
      - ./data/deployments:/app/data/deployments
      - ./data/configurations:/app/data/configurations
      - ./data/bin:/app/data/bin
      - ./data/datadir:/app/data/datadir
    env_file:
      - .env
      - paths.env

  celestia-da:
    user: root
    image: ghcr.io/rollkit/celestia-da:v0.12.1-rc0
    command: >
      celestia-da light start
      --da.grpc.namespace=000002048a79bf7a2048
      --da.grpc.listen=0.0.0.0:26650
      --core.ip rpc-mocha.pops.one
      --p2p.network=mocha
      --keyring.accname=upnode
      --gateway
    environment:
      - NODE_TYPE=light
      - P2P_NETWORK=mocha
    ports:
      - "26650:26650"
    volumes:
      - ./data/celestia:/home/celestia/.celestia-light-mocha-4/
    depends_on:
      force-clone:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:26659/header/1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always
    profiles: ["celestia"]

  op-geth:
    build:
      context: .
      dockerfile: Dockerfile.services
      args:
        ENTRYPOINT_SCRIPT: op-geth.sh
    volumes:
      - ./data/bin:/app/data/bin
      - ./data/datadir:/app/data/datadir
      - ./data/configurations:/app/data/configurations
    depends_on:
      force-clone:
        condition: service_completed_successfully
    env_file:
      - .env
      - paths.env
      - opgeth.env
    ports:
      - "8545:8545"
      - "8551:8551"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8545 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  op-node:
    build:
      context: .
      dockerfile: Dockerfile.services
      args:
        ENTRYPOINT_SCRIPT: op-node.sh
    volumes:
      - ./data/bin:/app/data/bin
      - ./data/configurations:/app/data/configurations
    depends_on:
      op-geth:
        condition: service_healthy
    env_file:
      - .env
      - paths.env
      - opnode.env
    ports:
      - "8547:8547"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8547 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  op-batcher:
    build:
      context: .
      dockerfile: Dockerfile.services
      args:
        ENTRYPOINT_SCRIPT: op-batcher.sh
    volumes:
      - ./data/bin:/app/data/bin
    depends_on:
      op-geth:
        condition: service_healthy
      op-node:
        condition: service_healthy
    env_file:
      - .env
      - paths.env
      - opbatcher.env
    ports:
      - "8548:8548"
    restart: unless-stopped

  op-proposer:
    build:
      context: .
      dockerfile: Dockerfile.services
      args:
        ENTRYPOINT_SCRIPT: op-proposer.sh
    volumes:
      - ./data/bin:/app/data/bin
      - ./data/deployments:/app/data/deployments
    depends_on:
      op-geth:
        condition: service_healthy
      op-node:
        condition: service_healthy
    env_file:
      - .env
      - paths.env
      - opproposer.env
    ports:
      - "8560:8560"
    restart: unless-stopped
